" Vim syntax file
" Language:	c
" Maintainer:	Zolboo Erdenebayar <zolboo.deb@gmail.com>
" Last Change:	

" Quit when a (custom) syntax file was already loaded
if exists("b:current_syntax")
  finish
endif

let s:cpo_save = &cpo
set cpo&vim

let s:ft = matchstr(&ft, '^\([^.]\)\+')

so $VIMRUNTIME/syntax/c.vim

syn keyword ovType OV_POINTER OV_PTRDIFF OV_ENUM OV_BYTE OV_STATE OV_STATE 
syn match defined /\<[A-Z_]\+\>/
syn match ovType /\<OV_INSTPTR_[A-Z]\+\>/
syn match ovType /\<OV_[A-Za-z_]\+\>/


hi def link defined Type
hi def link ovType Type

unlet s:ft

let &cpo = s:cpo_save
unlet s:cpo_save
" vim: ts=8
"
"


" OV_ST_NOTSUPPORTED OV_ST_UNKNOWN OV_ST_BAD OV_ST_QUESTIONABLE OV_ST_GOOD OV_VAR_TYPE OV_VT_VOID OV_VT_BYTE OV_VT_BOOL OV_VT_INT OV_VT_UINT OV_VT_SINGLE OV_VT_DOUBLE OV_VT_STRING OV_VT_TIME OV_VT_TIME_SPAN OV_VT_STATE OV_VT_STRUCT OV_VT_CTYPE OV_VT_POINTER OV_VT_ISVECTOR OV_VT_BYTE_VEC OV_VT_BOOL_VEC OV_VT_INT_VEC OV_VT_UINT_VEC OV_VT_SINGLE_VEC OV_VT_DOUBLE_VEC OV_VT_STRING_VEC OV_VT_TIME_VEC OV_VT_TIME_SPAN_VEC OV_VT_TIME_SERIES OV_VT_STATE_VEC OV_VT_STRUCT_VEC OV_VT_HAS_STATE OV_VT_HAS_TIMESTAMP OV_VT_KSMASK OV_VT_BOOL_PV OV_VT_INT_PV OV_VT_UINT_PV OV_VT_SINGLE_PV OV_VT_DOUBLE_PV OV_VT_STRING_PV OV_VT_TIME_PV OV_VT_TIME_SPAN_PV OV_VT_BOOL_PV_VEC OV_VT_INT_PV_VEC OV_VT_UINT_PV_VEC OV_VT_SINGLE_PV_VEC OV_VT_DOUBLE_PV_VEC OV_VT_STRING_PV_VEC OV_VT_TIME_PV_VEC OV_VT_TIME_SPAN_PV_VEC OV_VT_ANY OV_VAR_PROPS OV_VP_GETACCESSOR OV_VP_SETACCESSOR OV_VP_ACCESSORS OV_VP_DERIVED OV_VP_STATIC

" OV_VL_MAXINT
" OV_VL_MAXINT64
" OV_VL_MAXUINT
" OV_VL_MAXUINT64
" OV_VL_MININT
" OV_VL_MININT64
" OV_VL_MAXINT
" OV_VL_MAXINT64
" OV_VL_MAXUINT
" OV_VL_MAXUINT64
" OV_VL_MININT
" OV_VL_MININT64
" OV_PRINT_BOOL
" OV_PRINT_BOOL
" OV_PRINT_BOOL
" OV_PRINT_INT
" OV_PRINT_UINT
" OV_PRINT_INT
" OV_PRINT_UINT
" OV_PRINT_SINGLE
" OV_PRINT_DOUBLE
" OV_PRINT_STRING

" OV_BOOL
" OV_BYTE
" OV_INT
" OV_UINT
" OV_SINGLE
" OV_DOUBLE
" OV_STRING
" OV_TIME
" OV_TIME_SPAN
" OV_STATE
" OV_STRUCT
" OV_BYTE_VEC
" OV_BOOL_VEC
" OV_INT_VEC
" OV_UINT_VEC
" OV_SINGLE_VEC
" OV_DOUBLE_VEC
" OV_STRING_VEC
" OV_TIME_VEC
" OV_TIME_SPAN_VEC
" OV_STATE_VEC
" OV_GENERIC_VEC
" OV_STRUCT_VEC
" OV_VAR_VALUE
" OV_VAR_VALUE
" OV_STATE
" OV_TIME
" OV_ANY
" OV_CLASS_PROPS
" OV_CP_INSTANTIABLE
" OV_CP_FINAL
" OV_ENUM
" OV_ASSOC_PROPS
" OV_AP_LOCAL
" OV_ENUM
" OV_OP_PROPS
" OV_OP_ABSTRACT
" OV_OP_CFUNCTION
" OV_ENUM
" OV_TICKET_TYPE
" OV_AUTH_TYPE
" OV_TT_NONE
" OV_TT_SIMPLE
" OV_ENUM
" OV_RESULT
" OV_RESULT

" OV_ERR_OK OV_ERR_GENERIC OV_ERR_TARGETGENERIC OV_ERR_BADAUTH OV_ERR_UNKNOWNAUTH OV_ERR_NOTIMPLEMENTED OV_ERR_BADPARAM OV_ERR_BADOBJTYPE OV_ERR_BADNAME OV_ERR_BADPATH OV_ERR_BADMASK OV_ERR_NOACCESS OV_ERR_BADTYPE OV_ERR_BADSELECTOR OV_ERR_BADVALUE OV_ERR_BADFACTORY OV_ERR_ALREADYEXISTS OV_ERR_BADINITPARAM OV_ERR_BADPLACEMENT OV_ERR_CANTMOVE OV_ERR_FILEALREADYEXISTS OV_ERR_CANTCREATEFILE OV_ERR_CANTOPENFILE OV_ERR_CANTLOCKFILE OV_ERR_CANTREADFROMFILE OV_ERR_CANTWRITETOFILE OV_ERR_CANTMAPFILE OV_ERR_BADDATABASE OV_ERR_CANTOPENLIBRARY OV_ERR_LIBDEFMISMATCH OV_ERR_STRUCTDEFMISMATCH OV_ERR_CLASSDEFMISMATCH OV_ERR_ASSOCDEFMISMATCH OV_ERR_VARDEFMISMATCH OV_ERR_PARTDEFMISMATCH OV_ERR_OPDEFMISMATCH OV_ERR_UNKNOWNSTRUCTDEF OV_ERR_UNKNOWNCLASSDEF OV_ERR_UNKNOWNASSOCDEF OV_ERR_DBOUTOFMEMORY OV_ERR_HEAPOUTOFMEMORY OV_ERR_UNKNOWNOPTYPEDEF OV_ERR_OPTYPEDEFMISMATCH

" ENUMDEF(OV_ACCESS)
" #define OV_AC_NONE          ENUMVAL(OV_ACCESS, 0) /* no access at all, element is not visible */
" #define OV_AC_READ          ENUMVAL(OV_ACCESS, 1) /* read access           */
" #define OV_AC_WRITE         ENUMVAL(OV_ACCESS, 2) /* write access          */
" #define OV_AC_READWRITE     (OV_AC_READ | OV_AC_WRITE) /* both read and write access */
" #define OV_AC_DELETEABLE    ENUMVAL(OV_ACCESS, 0x10000000) /* object can be deleted */
" #define OV_AC_RENAMEABLE    ENUMVAL(OV_ACCESS, 0x08000000) /* object can be renamed */
" #define OV_AC_LINKABLE      ENUMVAL(OV_ACCESS, 0x04000000) /* parent/child can be linked */
" #define OV_AC_UNLINKABLE    ENUMVAL(OV_ACCESS, 0x02000000) /* parent/child can be unlinked */
" #define OV_AC_INSTANTIABLE  ENUMVAL(OV_ACCESS, 0x20000000) /* object can act as a factory */
" #define OV_AC_PART          ENUMVAL(OV_ACCESS, 0x80000000) /* object is part of another object */

" ENUMDEF(OV_OBJ_TYPE)
" #define OV_OT_DOMAIN     ENUMVAL(OV_OBJ_TYPE, 0x0001) /* object is a domain    */
" #define OV_OT_VARIABLE   ENUMVAL(OV_OBJ_TYPE, 0x0002) /* object is a variable  */
" #define OV_OT_HISTORY    ENUMVAL(OV_OBJ_TYPE, 0x0004) /* object is a history   */
" #define OV_OT_LINK       ENUMVAL(OV_OBJ_TYPE, 0x0008) /* object is a link      */
" #define OV_OT_STRUCTURE  ENUMVAL(OV_OBJ_TYPE, 0x0010) /* object is a structure */
" #define OV_OT_ANY        ENUMVAL(OV_OBJ_TYPE, \
                                     " OV_OT_DOMAIN | OV_OT_VARIABLE | \
                                     " OV_OT_HISTORY | \
                                     " OV_OT_LINK) /* | OV_OT_STRUCTURE) */
" *	OV_ASSOC_TYPE:
" #define OV_AT_ONE_TO_MANY	0x00000001			/* 1:n association */
" #define OV_AT_MANY_TO_MANY	0x00000002			/* n:m association */
" #define OV_AT_ONE_TO_ONE	0x00000003			/* 1:1 association */
" typedef OV_ENUM OV_ASSOC_TYPE;
" ENUMDEF(OV_LINK_TYPE)
" #define OV_LT_LOCAL_1_1         ENUMVAL(OV_LINK_TYPE, 1)
" #define OV_LT_LOCAL_1_MANY      ENUMVAL(OV_LINK_TYPE, 2)
" #define OV_LT_LOCAL_MANY_MANY   ENUMVAL(OV_LINK_TYPE, 5)
" #define OV_LT_LOCAL_MANY_1      ENUMVAL(OV_LINK_TYPE, 6)
" #define OV_LT_GLOBAL_1_1        ENUMVAL(OV_LINK_TYPE, 3)
" #define OV_LT_GLOBAL_1_MANY     ENUMVAL(OV_LINK_TYPE, 4)
" #define OV_LT_GLOBAL_MANY_MANY  ENUMVAL(OV_LINK_TYPE, 7)
" #define OV_LT_GLOBAL_MANY_1     ENUMVAL(OV_LINK_TYPE, 8)

" *	OV_PLACEMENT_HINT:
" ENUMDEF(OV_PLACEMENT_HINT)
" #define OV_PMH_DEFAULT  ENUMVAL(OV_PLACEMENT_HINT, 0)
" #define OV_PMH_BEGIN    ENUMVAL(OV_PLACEMENT_HINT, 1)
" #define OV_PMH_END      ENUMVAL(OV_PLACEMENT_HINT, 2)
" #define OV_PMH_BEFORE   ENUMVAL(OV_PLACEMENT_HINT, 3)
" #define OV_PMH_AFTER    ENUMVAL(OV_PLACEMENT_HINT, 4)
" *	OV_OBJ_STATE:
" #define OV_OS_NONE	0x00000000		/* object is not yet initialized */
" #define OV_OS_INIT	0x00000001		/* object is initialized */
" #define OV_OS_STARTED	0x00000002		/* object is started up */
" #define OV_OS_ACTIVE	0x00000004		/* object is active */
" typedef OV_ENUM OV_OBJ_STATE;
" ENUMDEF(OV_SVC)
" #define OV_NULL           ENUMVAL(OV_SVC, 0)
" #define OV_GETVAR         ENUMVAL(OV_SVC, 0x00000101)
" #define OV_SETVAR         ENUMVAL(OV_SVC, 0x00000102)
" #define OV_CREATEOBJECT   ENUMVAL(OV_SVC, 0x00000201)
" #define OV_DELETEOBJECT   ENUMVAL(OV_SVC, 0x00000202)
" #define OV_RENAMEOBJECT   ENUMVAL(OV_SVC, 0x00000203)
" #define OV_LINK           ENUMVAL(OV_SVC, 0x00000301)
" #define OV_UNLINK         ENUMVAL(OV_SVC, 0x00000302)
" #define OV_GETHIST        ENUMVAL(OV_SVC, 0x00000401)
	" #define KS_GETVAR         OV_GETVAR
	" #define KS_SETVAR         OV_SETVAR
	" #define KS_CREATEOBJECT   OV_CREATEOBJECT
	" #define KS_DELETEOBJECT   OV_DELETEOBJECT
	" #define KS_RENAMEOBJECT   OV_RENAMEOBJECT
	" #define KS_LINK           OV_LINK
	" #define KS_UNLINK         OV_UNLINK
" *	OV_TIME_TYPE:
" #define OV_TT_ABSOLUTE	KS_TT_ABSOLUTE
" #define OV_TT_RELATIVE	KS_TT_RELATIVE
" typedef OV_ENUM OV_TIME_TYPE;
" typedef uint32_t OV_SEMANTIC_FLAGS;
" *	OV_HSEL_TYPE:
" #define OV_HSELT_NONE	KS_HSELT_NONE
" #define OV_HSELT_TIME	KS_HSELT_TIME
" #define OV_HSELT_STRING	KS_HSELT_STRING
" typedef OV_ENUM OV_HSEL_TYPE;
" *	OV_HIST_TYPE:
" ENUMDEF(OV_HIST_TYPE)
" #define OV_HT_LOG            ENUMVAL(OV_HIST_TYPE, 0x00)
	" #define KS_HT_TABLE          ENUMVAL(OV_HIST_TYPE, 0x01) /* only in KS !? */
" #define OV_HT_BOOL           ENUMVAL(OV_HIST_TYPE, 0x02)
" #define OV_HT_INT            ENUMVAL(OV_HIST_TYPE, 0x10)
" #define OV_HT_UINT           ENUMVAL(OV_HIST_TYPE, 0x11)
" #define OV_HT_SINGLE         ENUMVAL(OV_HIST_TYPE, 0x20)
" #define OV_HT_DOUBLE         ENUMVAL(OV_HIST_TYPE, 0x21)
" #define OV_HT_STRING         ENUMVAL(OV_HIST_TYPE, 0x30)
" #define OV_HT_TIME           ENUMVAL(OV_HIST_TYPE, 0x31)
" #define OV_HT_TIME_SPAN      ENUMVAL(OV_HIST_TYPE, 0x32)
" #define OV_HT_TYPE_MASK      ENUMVAL(OV_HIST_TYPE, 0x0000FFFF)
" #define OV_HT_TIME_DRIVEN    ENUMVAL(OV_HIST_TYPE, 0x80000000)
" #define OV_HT_CHANGE_DRIVEN  ENUMVAL(OV_HIST_TYPE, 0x40000000)
" *	OV_INTERPOLATION_MODE:
" ENUMDEF(OV_INTERPOLATION_MODE)
" #define OV_IPM_NONE     ENUMVAL(OV_INTERPOLATION_MODE, 0x0000)
" #define OV_IPM_LINEAR   ENUMVAL(OV_INTERPOLATION_MODE, 0x0001)
" #define OV_IPM_MIN      ENUMVAL(OV_INTERPOLATION_MODE, 0x0002)
" #define OV_IPM_MAX      ENUMVAL(OV_INTERPOLATION_MODE, 0x0004)
" #define OV_IPM_HOLD     ENUMVAL(OV_INTERPOLATION_MODE, 0x0008)
" #define OV_IPM_DEFAULT  ENUMVAL(OV_INTERPOLATION_MODE, 0x8000)
" *	OV_TICKET:
	" struct OV_TICKET_VTBL	*vtbl;
	" OV_TICKET_TYPE			type;
			" OV_STRING		id;				/* only, if tickettype == OV_TT_SIMPLE */
" }	OV_TICKET;
" *	OV_TICKET_VTBL:
" #ifndef OV_XDR_TICKET
" struct OV_TICKET_VTBL {
	" OV_TICKET	*(* createticket)(void *data, OV_TICKET_TYPE type);
	" void 		(* deleteticket)(OV_TICKET *pticket);
	" OV_BOOL		(* encodereply)(void *data, OV_TICKET *pticket);
	" OV_ACCESS	(* getaccess)(const OV_TICKET *pticket);
" struct OV_TICKET_VTBL {
	" OV_TICKET	*(* createticket)(XDR *xdr, OV_TICKET_TYPE type);
	" void 		(* deleteticket)(OV_TICKET *pticket);
	" OV_BOOL		(* encodereply)(XDR *xdr, OV_TICKET *pticket);
	" OV_ACCESS	(* getaccess)(const OV_TICKET *pticket);
" typedef struct OV_TICKET_VTBL	OV_TICKET_VTBL;
" *	OV_MSG_TYPE:
" #define OV_MT_UNKNOWN		0x00000000
" #define OV_MT_INFO		0x00000001
" #define OV_MT_DEBUG		0x00000002
" #define OV_MT_WARNING		0x00000003
" #define OV_MT_ERROR		0x00000004
" #define OV_MT_ALERT		0x00000005
" typedef OV_ENUM OV_MSG_TYPE;
" #define OV_OBJNAME_ROOT				"/"
" #define OV_OBJNAME_ACPLT			"acplt"
" #define OV_OBJNAME_OV				"ov"
" #define OV_OBJNAME_OBJECT 			"object"
" #define OV_OBJNAME_DOMAIN			"domain"
" #define OV_OBJNAME_LIBRARY			"library"
" #define OV_OBJNAME_STRUCTURE			"structure"
" #define OV_OBJNAME_CLASS			"class"
" #define OV_OBJNAME_ELEMENT			"element"
" #define OV_OBJNAME_VARIABLE			"variable"
" #define OV_OBJNAME_PART				"part"
" #define OV_OBJNAME_OPERATION			"operation"
" #define OV_OBJNAME_ASSOCIATION			"association"
" #define OV_OBJNAME_CONTAINMENT			"containment"
" #define OV_CONST_OPENFNC_PREFIX			"ov_library_open_"
" #define OV_NAME_MAXLEN 255
" #define OV_COMMENT_MAXLEN 4095
" #define OV_TECHUNIT_MAXLEN 63
" #define OV_SIMPLETICKETID_MAXLEN 255
