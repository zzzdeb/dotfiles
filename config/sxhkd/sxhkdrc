# The Simple X Hotkey Daemon is the program used by LARBS to map most of the
# dwm-independent commands.  This file is pretty readable, so I'll let you read
# it.

# The keys NOT bound here by sxhkd, but by dwm or i3 are:
# The t thru p keys on the top row
# The f thru ; keys on the home row
# The b key on the bottom row (hides the bar in either case)

# Basic binds
# Basic binds

# Launch terminal
super+Return
  $TERMINAL
# Launch terminal in same dir
super+shift+Return
  samedir
# Qutebrowser sessions
super+a; {a, d, c, m, j}
  {ls $HOME/.local/share | grep qutebrowser_ | sed 's/qutebrowser_//' | rofi -dmenu | xargs qb_session, qb_session devops,qb_session cas2d,qb_session malo,qb_session japanese}
# Clipmenu
super+c
  clipmenu
# Launcher
super+d
  rofi -show combi -display-drun "" -display-run "" -combi-modi "drun#run" -modi combi -show-icons
# Xrandr invert color, dark mode
super+ctrl+i
  dark_mode.sh
# Kill window
super+q
  window_kill
# Force kill
super+ctrl+q
  kill -9 `xdotool getwindowfocus getwindowpid`
# super+Q
  # i3-msg 'focus right; move left; focus up' && window_kill
# Nvim
super+n
  $TERMINAL -e nvim
# Change display output
super+ctrl+o
  ~/.dotfiles/scripts/change_output.sh
# Change audio output
super+ctrl+v
  changeAudioOutput.sh

# Launcher
super + g; {a, b, B, c, e, f, h, k, m, n, N, o, O, p, P, q, r, s, t, T, v, x}
  {arandr,firefox --private-window,btmenu,gcalendar,gmail,$TERMINAL -e $FILE,$TERMINAL -e htop,anki -p "$USER",$TERMINAL -e ncmpcpp,networkmanager_dmenu,$TERMINAL -e nmtui,$TERMINAL -e onedrive_log,$TERMINAL -e onedrive_log onedrive_pers,$TERMINAL -e pulsemixer,pycharm,python3 -m qutebrowser,zathura "$HOME/OneDrive/Books/current.epub",baobab,$TERMINAL -e tg,telegram-desktop,code,ddspawn genius -f mono:pixelsize=24}

# exit
super + Q; {l, e, s, h, H, r, S, g}
  wm_exit {lock, logout, suspend, hybrid-sleep, hibernate, reboot, shutdown, hiberboot.sh}

# leader
super + comma; {a,b, B, d, h, k, l, m, M, o, O, r, S, s, t, u, v, V, w, W, x, X, z, slash}
  {dmenurecord, rofi -show windowcd -lines 15,vertical_bar_pos.sh,i3 "bar mode toggle",help-shortcut,i3 'sticky toggle',extbacklight,i3-msg 'move workspace to output right',i3-msg 'move workspace to output up',i3order, i3order --split 3,sudo /usr/bin/systemctl restart NetworkManager,i3 'move scratchpad',i3 'scratchpad show',rofi -show window -lines 15,dmenuunicode,vpntoggle 'vpn-default',vpntoggle 'PIA - Switzerland',sxivw,i3 'floating enable;;exec 21_9_width',fixit.sh l,fixit.sh d,i3zen toggle,ducksearch}

# music
super + m; {a, j, o, p, l, n, t, q, space, N, r, semicolon, XF86AudioLowerVolume, XF86AudioRaiseVolume}
  {mpd_controll -a, lmc backward, mpd_controll -o, mpd_controll -p, mpd_controll -l, lmc next, mpd_controll -t, mpc stop, lmc toggle, lmc prev, lmc replay, lmc forward, mpc volume -5, mpc volume +5}

# # Audiokeys
XF86AudioMute
  lmc mute
XF86Audio{Raise,Lower}Volume
  lmc {up, down}
# XF86Audio{Next,Prev}
  # mpc {next,prev}
# XF86Audio{Pause,Play,Stop}
  # mpc {pause,play,stop}
# XF86Audio{Rewind,Forward}
  # mpc seek {-,+}10
# XF86AudioRecord
  # dmenurecord
# XF86AudioMedia
  # $TERMINAL -e ncmpcpp

XF86Display
  autorandr orig
XF86PowerOff
  wm_exit suspend
XF86TouchpadToggle
  toggletouchpad
XF86TouchpadOn
  synclient TouchpadOff=0
XF86TouchpadOff
  synclient TouchpadOff=1
XF86Suspend
  wm_exit suspend
XF86MonBrightness{Up,Down}
  xbacklight -{inc,dec} 5; exec dunstify --replace=11 -t 2000 ": $(xbacklight -get)% $(progressString.sh 10  - $(xbacklight -get))"
super + Prior
  xdotool click --repeat 10 4
super + Next
  xdotool click --repeat 10 5
# super+XF86MonBrightness{Up,Down}
  # backlight {up, down}; exec dunstify --replace=11 -t 2000 ": $(backlight current)% $(progressString.sh 10  - $(backlight current))"

super + XF86MonBrightness{Up,Down}
  xbacklight.py HDMI-1 {+,-}0.1


super + Print
  maim Pictures/screenshot-"$(date '+%y%m%d-%H%M-%S').png"
super + shift+Print
  maimpick
super+shift+Print		
  maim -s | xclip -selection clipboard -t image/png ;
super+Scroll_Lock	
  killall screenkey || screenkey
super+Delete
  dmenurecord kill

super + {_,shift+}{Left,Up,Down,Right}
  by={10,1};\
  what="{width ,height ,height -,width -}";\
  i3-msg resize grow $what$by px

# WM
# i3-msg
# focus the node in the given direction
super + {_,shift + }{j,k,l,semicolon}
  {i3fullscreenDirections.py,i3-msg move} {left,down,up,right}
super + {_,shift + }{apostrophe,slash}
  same="{$TERMINAL,samedir}";\
  dir="{horizontal,vertical}";\
  i3-msg split $dir; $same
super + {_,shift + }space
  i3-msg {"focus mode_toggle", "floating toggle"}
super + b
  i3-msg 'layout toggle splith splitv'
super + ctrl + c
  i3-msg 'reload'
super + {_, shift + } f
  i3-msg {'fullscreen toggle', 'floating toggle; move position 650 150; resize set 1900 1060'}
super + shift + m
  i3-msg "move workspace to output right"
super + shift + ctrl + m
  i3-msg "move workspace to output up"
super + {o,v}
  i3-msg "split {v,h}"
super + ctrl + {_, shift + } p
  i3-msg "focus {parent, child}"
super+ctrl+r 
  i3-msg "restart"
super + t
  i3-msg "layout toggle tabbed stacked"

super+ctrl+{_,shift+}{j,k,l,semicolon}
  typ="{focus,move}"; \
  direction="{left,down,up,right}"; \
  i3split_focus -t $typ -d $direction
super+{_,shift+}{w,e,r,y,u,i,p}
  mode="{ ,move container to}";\
  wsnumber="$WORKSPACE{2,3,4,6,7,8,0}";\
  i3-msg "$mode workspace $wsnumber"
Print
  xdotool getmouselocation --shell; \
  scrot -a 482,272,1074,767 # cw
  # scrot -a 440,281,1266,755 # under 23100
  # scrot -a 5,349,1902,709 # rhs 23100
  # scrot -a 50,280,1852,750 # lhs 23100
  # scrot -a 10,273,1899,794 # lhs
  # scrot -a 318,324,1420,696 # rhs
  # scrot -a 258,289,1140,750
  # flameshot gui -r > ~/Bilder/Flameshot_$(date +%Y-%m-%d_%H-%M-%S).jpg

super+z
  pass generate -c
