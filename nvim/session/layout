let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +87 .config/after_backup/xkb_keycodes_evdev
badd +50 .config/after_backup/xkb_symbols_zzz
badd +1 .config/i3/config
badd +1 fugitive:/home/zzz/.git/0/.config/after_backup/xkb_symbols_zzz
badd +2 .config/htop/htoprc
badd +1 fugitive:///home/zzz/.git//54472da3351e30d3e670c3179572bfd10e2eb10e/.PyCharm2018.1/config/options/window.state.xml
badd +1 ~/gitv-1
argglobal
silent! argdel *
$argadd .config/after_backup/xkb_keycodes_evdev
edit .config/after_backup/xkb_keycodes_evdev
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winminheight=0
set winheight=1
set winminwidth=0
set winwidth=1
argglobal
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let s:l = 87 - ((49 * winheight(0) + 32) / 65)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
87
normal! 03|
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFIc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
