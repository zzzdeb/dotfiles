#!/usr/bin/env python3
from i3ipc import Connection
import json
import asyncio
import random
from subprocess import run, check_output
import time
from copy import deepcopy
import os
from subprocess import Popen

import argparse
TITLE_TO_REPLACE='dummy_to_be_replaced'

def main():
    """TODO: Docstring for main.
    :returns: TODO

    """
    parser = argparse.ArgumentParser(description='Orders i3.')
    parser.add_argument('-d','--dir', dest='dir', type=str, help='dir')
    parser.add_argument('-t','--type', dest='type', type=str, default='focus', help='type')

    args = parser.parse_args()


    i3 = Connection()

    # get_tree() returns the root container
    tree = i3.get_tree()

    # get some information about the focused window
    focused = tree.find_focused()
    print(f'Focused window: {focused.name}')

    def get_group(container):
        workspace = container.workspace()
        while container.parent != workspace:
            container = container.parent
        return container

    group = get_group(focused)
    group.command('focus; focus '+args.dir)
    if args.type == 'move':
        #  new_focused = i3.get_tree().find_focused()
        #  aim_group = get_group(new_focused)
        #  pass

        # swap implementation
        new_focused = i3.get_tree().find_focused()
        aim_group = get_group(new_focused)
        aim_group.leaves()[0].command('focus')
        Popen('st -t dummy_to_replace -e sh'.split(' '))
        to_swap = i3.get_tree().find_titled('dummy_to_replace')
        while len(to_swap) == 0:
            time.sleep(0.05)
            to_swap = i3.get_tree().find_titled('dummy_to_replace')
        to_swap = to_swap[0]
        focused.command('swap with con_id {}'.format(to_swap.id))
        to_swap.command('kill')
        focused.command('focus')

    return 0

if __name__ == "__main__":
    main()
